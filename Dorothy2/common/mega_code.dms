//Dorothy2
//caption=mega_code
//version=1.0
//hint=
//match=
//author=xor
//path=program
//priority=
//end
function mega_code(url){
	//debug =true;
	common_load('bit','StringBufferExtension','stack','GIF2test','decodeGIF','dump','download');
	//f = new File('C:\user\tools\Irvine\irvine1_0_0\Dorothy2\temp\EXY.gif');
	//f.open('r');
	//data = f.read();
	//url = 'http://www.megaupload.com/capgen.php?2aebeaad41c41372';

	var http = download(url);
	if(http.responseHeader.code != 200){
		println('GIF画像ＤＬエラー>' + http.responseHeader.code);
		return false;
	}
	var data = http.data;

	var GIF = gif(data);
	if(GIF == false){
		println('GIF画像エラー');
		println(data);
		return false;
	}
	println('Global_Color ' + GIF.Header.Global_Color_Table_Flag);
	//dsp(GIF);
	ret = decodeGIF(GIF);
	if(ret == false){
		println('復号エラー');
		return false;
	}
	i = parseInt(GIF.Block.Image_Block.Image_Width);
	a1 = new Array(i);
	a2 = new Array(i);
	a3 = new Array(i);
	for(i = 0;i < a1.length ; i++){
		a1[i] = 0;
		a2[i] = 0;
		a3[i] = 0;
	}
	println('解析中!!!');
	//println('GIF.Block.Image_Block.Image_Width=' + GIF.Block.Image_Block.Image_Width);
	var clorTb = new StringBuffer(GIF.Header.Global_Color_Table);
	println('Global_Color size ' + clorTb.length);
	println('カラー解像度 ' + GIF.Header.Color_Resolution);
	println('size ' + Math.pow(2 , (GIF.Header.Size_of_Global_Color_Table + 1)) * 3);
	var tbSize = Math.pow(2 , (GIF.Header.Size_of_Global_Color_Table + 1)) * 3;
	var i,j,key1,key2,key3;
	var f1 = false;
	var f2 = false;
	var f3 = false;
//3[91 108 116]
//7[112 142 159]
//C[145 169 183]
	for(i = 0 ;ret.length;i++){
		if((i * 3) >= tbSize ){
			println('size error');
			break;
		}
		j = clorTb[i * 3].charCodeAt(0);
		if(j == 120){
			if(clorTb[i * 3 + 1].charCodeAt(0) == 100 && clorTb[i * 3 + 2].charCodeAt(0) == 100){
				key1 = i;
				f1 = true;
			}
		}
		if(j == 91){
			if(clorTb[i * 3 + 1].charCodeAt(0) == 108 && clorTb[i * 3 + 2].charCodeAt(0) == 116){
				key1 = i;
				f1 = true;
			}
		}


		if(j == 170){
			if(clorTb[i * 3 + 1].charCodeAt(0) == 100 && clorTb[i * 3 + 2].charCodeAt(0) == 100){
				key2 = i;
				f2 = true;
			}
		}
		if(j == 112){
			if(clorTb[i * 3 + 1].charCodeAt(0) == 142 && clorTb[i * 3 + 2].charCodeAt(0) == 159){
				key2 = i;
				f2 = true;
			}
		}

		if(j == 220){
			if(clorTb[i * 3 + 1].charCodeAt(0) == 100 && clorTb[i * 3 + 2].charCodeAt(0) == 100){
				key3 = i;
				f3 = true;
			}
		}
		if(j == 145){
			if(clorTb[i * 3 + 1].charCodeAt(0) == 169 && clorTb[i * 3 + 2].charCodeAt(0) == 183){
				key3 = i;
				f3 = true;
			}
		}
		if(f1 && f2 && f3){
			break;
		}
	}
	if(!(f1 && f2 && f3)){
		println('解析エラー');
		//exit();
	}
	//0----+----1----+----2----+----3----+----4----+----5----+----6----+----7
	c = 11;
	for(i = 0 ; i < ret.length ; i+=  GIF.Block.Image_Block.Image_Width){
		s = '';
		for(j = 0 ; j < GIF.Block.Image_Block.Image_Width ; j++){
			//s = s  + ((ret[i+j] != 4)?'i':'I');
			//a[j]=a[j]+((ret[i+j] != 4)?0:1);
			if(ret[i+j] == key1 | ret[i+j] == key2 | ret[i+j] == key3){
				s = s+ '*';//'◆';
			}
			else{
				s = s + '-';//'◇';
			}
			if(ret[i+j] == key1){ a1[j] = a1[j] + 1;}
			if(ret[i+j] == key2){ a2[j] = a2[j] + 1;}
			if(ret[i+j] == key3){ a3[j] = a3[j] + 1;}

		}
		//if(debug){
			println(c ++ + s);
		//}
	}
	var zeroCut = function(a0){
		var i = 0;
		while(a0[i] == 0){
			i++;
		}
		var j = a0.length - 1;
		while(a0[j] == 0){
			j--;
		}
		return '[' + a0.slice(i , j + 1) + ']';
	};
		
	println(zeroCut(a1));
	println(zeroCut(a2));
	println(zeroCut(a3));
	//println('------');
	if(debug){
		for(i = 0 ; i < ret.length ; i+=  GIF.Block.Image_Block.Image_Width){
			s = '';
			for(j = 0 ; j < GIF.Block.Image_Block.Image_Width ; j++){
				var ss = ret[i+j];
				sss1 = clorTb[ss * 3 +0].charCodeAt(0);
				sss2 = clorTb[ss * 3 +1].charCodeAt(0);
				sss3 = clorTb[ss * 3 +2].charCodeAt(0);
				if(ss > 9){
					//ss = 'x';
					if(ss < 30){
						ss = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T'][ss - 10];
					}
					else{
						ss = 'x';
					}
				}
				if(ss == 0){
					ss = '_';
				}
				s = s  + ' ' + ss;
				s = s + '[' + sss1 + ' ' + sss2 + ' ' + sss3 + ']';
			}
			println(s);
		}
	}
	var ca = [[2,5,8,11,11,13,14,11,9,11,14,13,11,11,8,5,2],
		[2,5,7,9,9,11,13,11,8,7,11,15,13,12,9,5,1],
		[2,5,9,12,11,14,12,9,8,10,14,12,10,10,7,4,1]];
		//2,5,9,12,12,15,11,8,8,11,13,11,10,10,7,4,1
	var cb = [[21,21,20,12,9,9,9,9,9,11,12,14,18,13,6],
		[21,21,21,21,12,12,12,12,12,12,10,16,17,14,8,1],
		[2,20,20,20,9,9,9,9,9,9,11,13,16,15,12,3]];
		//20,20,20,10,9,9,9,9,9,10,13,14,16,13,6
		//20,20,20,10,9,9,9,9,9,10,13,14,16,13,6
	var cc = [[10,14,16,9,7,6,7,6,6,7,6,8,11,9,6,1],
		[7,12,15,12,8,7,7,6,6,6,7,8,9,11,8,3],
		[3,11,14,16,8,8,6,6,8,8,6,7,10,10,8,6]];
		//10,14,16,9,7,6,7,6,6,7,6,8,11,9,6,1
	var cd = [[20,20,20,6,6,6,6,6,7,7,8,9,11,15,12,8],
		[21,21,21,21,8,8,8,8,7,6,8,9,10,15,13,10,3],
		[20,20,20,6,6,6,6,6,7,7,8,9,11,15,12,8]];
		//21,21,21,21,8,8,8,8,7,6,8,9,10,15,13,10,3
	var ce = [[21,21,21,21,12,12,12,12,12,12,8,8,8,8],
		[20,20,20,9,9,9,9,9,9,6,6,6,6]];
	var cf = [[21,21,21,21,8,8,8,8,8,4,4,4,4],
		[20,20,20,8,6,6,6,6,3,3,3,3]];
	var cg = [[5,11,15,13,7,8,6,7,6,6,10,10,9,10,14,12,11,3],
		[3,11,14,16,8,8,6,6,8,8,11,10,9,10,15,15,12,11],
		[10,14,16,10,7,7,7,6,6,7,9,9,9,14,14,12,3]];
		//3,11,14,16,8,8,6,6,8,8,11,10,9,10,15,15,12,11
	var ch = [[2,20,20,20,3,3,3,3,3,3,3,3,5,20,20,20],
		[21,21,20,7,3,3,3,3,3,3,3,3,20,20,20,3]];
		//21,21,21,21,4,4,4,4,4,4,4,4,21,21,21,21
		//20,20,20,5,3,3,3,3,3,3,3,3,20,20,20,1
		//20,20,20,5,3,3,3,3,3,3,3,3,20,20,20,1
	var ci = [[20,20,20,1],
		[2,20,20,20],
		[21,20,20,3]];
	var cj = [[1,3,4,4,3,3,4,5,19,18,16],
		[2,3,3,3,3,3,4,20,19,18]];
	var ck = [[21,21,21,21,5,4,4,7,9,10,10,11,10,7,4,2],
		[21,21,20,9,4,5,5,7,10,11,11,10,9,6,3,1]];
		//21,21,21,21,5,4,4,7,9,10,10,11,10,7,4,2
		//21,21,21,21,5,4,4,7,9,10,10,11,10,7,4,2
	var cl = [[4,21,20,20,3,3,3,3,3,3,3,3,3],
		[2,20,20,20,3,3,3,3,3,3,3,3],
		[21,21,20,4,3,3,3,3,3,3,3,3]];
		//2,20,20,20,3,3,3,3,3,3,3,3,3
		//4,21,20,20,3,3,3,3,3,3,1
		//20,20,20,3,3,3,3,3,3,3,3,1
		//4,21,20,20,3,3,3,3,3,3,3,3,3
		//2,20,20,20,3,3,3,3,3,3,3,3,2
	var cm = [[2,20,20,20,2,4,11,19,14,8,9,13,12,10,5,4,20,20,20],
		[21,21,20,6,4,9,14,14,9,7,12,17,13,7,2,20,20,20,3]];
		//2,20,20,20,2,4,11,19,14,8,9,13,12,10,5,4,20,20,20
	var cn = [[21,20,20,9,6,5,6,5,5,6,5,6,5,20,20,18,3],
		[20,20,20,7,5,5,5,6,5,6,5,6,5,20,20,20,1]];
	var co = [[8,12,16,11,8,7,7,6,6,6,7,7,7,10,16,13,9],
		[10,14,16,9,8,6,7,6,6,7,7,8,9,14,15,12],
		[3,11,15,17,8,8,6,6,8,8,6,6,8,8,17,15,11,3]];
		//10,14,16,10,8,7,7,6,6,6,7,7,8,12,15,12
		//10,14,16,9,8,6,7,6,6,7,7,8,9,14,15,12,6
	var cp = [[2,20,20,20,6,6,6,6,6,6,7,8,8,10,8,5],
		[21,21,21,21,8,8,8,8,8,6,6,7,10,9,7,2]];
		//2,20,20,20,6,6,6,6,6,6,7,8,8,10,7,5
		//4,21,20,20,6,6,6,6,6,7,7,6,9,9,7,5
		//21,21,21,21,8,8,8,8,8,6,6,7,10,9,7,2
		//2,20,20,20,6,6,6,6,6,6,7,8,8,10,8
	var cq = [[6,12,15,12,9,7,6,8,10,10,12,8,9,9,18,15,11],
		[3,11,15,17,8,8,6,7,11,12,11,8,9,11,19,17,11,3],
		[10,14,16,9,8,6,7,9,10,11,9,10,10,15,15,12,6]];
		//10,14,16,9,8,6,7,9,10,11,9,10,10,15,15,12,6
		//8,12,15,10,8,7,7,7,9,10,12,9,9,11,17,14,9
	var cr = [[20,20,20,8,6,6,6,6,6,8,12,15,17,12,6],
		[21,21,21,21,8,8,8,8,7,8,10,15,18,14,10,2],
		[4,21,20,20,6,6,6,6,6,8,11,14,17,14,11,5]];
		//4,21,20,20,6,6,6,6,6,8,11,14,17,14,11,4
		//21,21,21,21,8,8,8,8,7,8,10,15,18,14,10,3
	var cs = [[4,9,12,14,10,9,10,11,9,9,10,13,10,6,2],
		[7,10,14,12,11,9,8,8,10,9,12,11,8,5]];
		//5,10,13,12,10,10,8,9,10,9,11,12,9,6
	var ct = [[4,4,4,3,3,3,20,20,20,7,3,3,3,3,3],
		[3,3,3,3,3,5,20,20,20,3,3,3,3,3,3]];
		//3,3,3,3,3,5,20,20,20,3,3,3,3,3
		//4,4,3,3,3,7,20,20,20,3,3,3,3,3,3
		//3,3,3,3,3,5,20,20,20,3,3,3,1
	var cu = [[18,18,19,4,3,4,3,3,4,4,4,6,18,17,14],
		[15,18,19,20,4,3,3,4,4,3,3,4,20,19,18,14]];
	var cv = [[1,4,7,10,11,11,10,7,6,8,12,11,12,9,5,2],
		[3,7,11,12,12,9,6,7,10,10,10,10,6,1],
		[2,6,9,12,12,12,9,6,8,10,10,10,10,7,3],
		[2,5,8,10,10,10,10,7,6,9,13,13,12,8,4],
		[3,7,11,12,12,9,6,7,10,10,10,10,7,4,1],
		[3,6,10,11,11,11,8,7,8,11,11,11,10,6,3]];
	var cw = [[3,8,12,15,13,9,10,11,11,8,4,6,10,12,12,9,10,12,12,9,5,1],
		[3,7,11,12,11,9,8,13,13,10,5,5,9,10,9,9,9,14,16,11,5]];
		//3,7,11,12,11,9,8,13,13,10,5,5,9,10,9,9,9,14,16,11,6,1
		//2,6,10,13,12,10,8,12,12,11,6,5,8,10,10,10,8,12,14,13,8,3
	var cx = [[1,5,9,10,12,10,10,7,7,10,10,12,10,9,5],
		[1,3,6,10,10,11,11,8,7,9,11,11,12,8,6],
		[1,5,6,9,11,10,11,8,7,9,10,11,11,7,5,1],
		[2,6,8,11,10,11,10,6,8,11,11,10,10,7,2],
		[1,3,6,10,10,11,11,8,7,9,11,11,12,8,6,2],
		[1,5,9,10,12,10,10,7,7,10,10,12,10,9,5,1]];
		//1,5,9,10,12,10,10,7,7,10,10,12,10,9,5
	var cy = [[3,5,6,7,12,15,14,16,7,7,5,3,1],
		[2,4,6,6,6,15,13,15,9,7,6,4,1],
		[1,3,5,7,8,16,14,14,16,8,7,5,3,1]];
		//2,4,6,6,6,15,13,15,9,7,6,4,1
		//1,3,6,8,10,15,14,15,7,7,6,4,2
		//1,3,6,8,10,15,14,15,7,7,6,4,2
		//1,3,5,7,8,16,14,14,16,8,7,5,3,1
	var cz = [[3,8,10,9,10,11,11,11,11,11,12,11,10,7,4],
		[3,8,10,11,12,13,13,13,12,13,13,12,11,8,5,3],
		[2,4,8,9,11,12,10,10,11,11,11,11,10,9,3]];
		// 3,8,10,11,12,13,13,13,12,13,13,12,11,10,9,7
		//3,4,9,10,11,11,10,11,11,10,10,11,10,8,7,6
		//3,7,8,9,11,11,11,11,11,11,12,10,9,8,6,1
		//2,4,8,9,11,12,10,10,11,11,11,11,10,9,8
		//3,7,8,9,11,11,11,11,11,11,12,10,9,7,3
		//3,7,8,9,11,11,11,11,11,11,12,10,9,8,6,1

	c_all = [ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz];
	c_smb = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

	var sc3  = function(i , k , kk){
		var s = 0;
		var j;
		for(j = 0 ; j < c_all[k][kk].length ; j++){
			if(c_all[k][kk][j] == a[i + j]){
				s++;
				s++;
			}
			else if(c_all[k][kk][j] == a[i + j]+1){
				s++;
			}
			else if(c_all[k][kk][j] == a[i + j]-1){
				s++;
			}
			else{
				s--;
			}
		}
		while(a[i+j] != 0){
			if(a[i+j] == null){break;}
			s--;
			j++;
		}
//println('exit sc3 ' + s + ' ' + j);
		return s;
	};
	var sc2 = function(i , k){
		if(i < 0){
			return -100;
		}
		var s = 0;
		var j;
		var ss = -100;
		for(j = 0 ; j < c_all[k].length ; j++){
//println(i + ' ' + c_smb[k] + ' ' + j);
			s = sc3(i , k , j);
			if(s > ss){
				ss = s;
			}
		}
		return ss;
	};
	var sc = function(i , k){
//println(c_smb[k]);
		var s = sc2(i , k);
		var s1 = sc2( i + 1 , k);
		var s2 = sc2( i - 1 , k);
		//println('s:s1:s2=' + s + ' ' + s1 + ' ' + s2);
		if(s1 > s){
			s = s1;
		}
		if(s2 > s){
			s = s2;
		}
		return s;
	};

	var aa = [a1,a2,a3];
	var i = 0;
	var ans;
	var gifno = '';
	var sn = new Array(c_smb.length);
	for(m = 0 ; m < 3 ; m++){
		a = aa[m];
		a = a.concat(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
		i = 0;
		while(a[i] == 0){
			i++;
		}
		var j;
		for(j = 0 ; j < c_smb.length ; j++){
			sn[j] = sc(i , j);
		}
		ans = 0;
		ans_p = sn[ans];
		for(j = 0 ; j < c_smb.length ; j++){
			if(sn[ans] < sn[j]){
				ans = j;
				ans_p = sn[j];
			}
		}
		//println(m + 1 + '文字目=' + c_smb[ans] + ' ' + ans_p + ' / ' + c_all[ans].length);
		//i += cn[ans].length + 1;
		gifno += c_smb[ans];
	}
	//var f = new File(Dorothy.temp + gifno + '.gif');
	//f.open('w');
	//f.write(data);
	//f.close();
	return gifno;
}
